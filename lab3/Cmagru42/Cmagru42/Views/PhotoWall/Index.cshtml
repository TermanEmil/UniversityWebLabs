@model GridPhotosViewModel

@{
    ViewData["Title"] = "Photo Wall";
}

@section Styles {
<style>
    .grid-image {
        width: 150px;
        height: 150px;
        background-color: black;
    }

    .thumb-up-img {
        width:  15px;
        height: 15px;
        display: inline;
    }

    .likes-count {
        display: inline;
        white-space:nowrap;
    }
</style>
}
<!-- Img display template -->
<template id="grid-image-template">
    <div class="grid-img col-md-2 col-sm-3 col-xs-12">
        <image class="grid-image" src="/imgs/loadingImg.png"></image>
        <div id="likes">
            <image class="thumb-up-img" src="/imgs/thumb-up.png"></image>
            <p class="likes-count">...</p>
        </div>
    </div>
</template>

<div id="grid-images" class="row"> 
</div>

@section Scripts {
    <environment include="Development">
        <script src="~/js/LoadImgs.js" asp-append-version="true"></script>
    </environment>

    <environment exclude="Development">
        <script src="~/js/LoadImgs.min.js" asp-append-version="true"></script>
    </environment>

    <script>
        function displayAllImgsFromModel() {
            var template = document.getElementById("grid-image-template");
            var imgsHolder = document.getElementById("grid-images");

            @*@foreach (var photo in Model.Photos)
            {
                <text>
                    displayGridImg(
                        template,
                        imgsHolder,
                        '@Html.Raw(photo.Base64Img)',
                        '@Html.Raw(photo.ImgId)',
                        '@Html.Raw(photo.Likes)',
                        '@Html.Raw(photo.CommentsCount)');
                </text>
            } *@
        }
    
        var template = document.getElementById("grid-image-template");
        var imgsHolder = document.getElementById("grid-images");

        for (var i = 0; i < 20; i++)
            loadNewImg(i, template, imgsHolder);
    </script>
}
