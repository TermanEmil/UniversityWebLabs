@model GridPhotosViewModel

@{
    ViewData["Title"] = "Photo Wall";
}

@section Styles {
<style>
    .grid-image {
        width: 150px;
        height: 150px;
        background-color: black;
    }

    .under-img-ico {
        width:  15px;
        height: 15px;
    }

    .inline {
        display: inline;
    }
</style>
}

<!-- Img display template -->
<template id="grid-image-template">
    <div class="grid-element col-md-2 col-sm-3 col-xs-12">
        <image class="grid-image"></image>
        <table id="under-img" style="width:95%">
            <tr>
                <th>
                    <image class="under-img-ico" src="/imgs/thumb-up.png" onclick="imgLike(this);"></image>
                    <p class="inline likes-count">...</p>
                </th>
                <th>
                    <div align="right">
                        <p class="inline comments-count">...</p>
                        <image class="under-img-ico" src="/imgs/comment-icon.png"></image>    
                    </div>
                </th>
            </tr>
        </table>
    </div>
</template>

<!-- Img container -->
<div id="grid-images" class="row"> 
</div>

<center>
    <button id="more-imgs-btn" onclick="loadImages(deltaImgsToLoad);">More!</button>
    <p id="loading-img-msg"></p>
</center>

@section Scripts {
    <environment include="Development">
        <script src="~/js/LoadImgs.js" asp-append-version="true"></script>
        <script src="~/js/ContentReact.js" asp-append-version="true"></script>
    </environment>

    <environment exclude="Development">
        <script src="~/js/LoadImgs.min.js" asp-append-version="true"></script>
        <script src="~/js/ContentReact.min.js" asp-append-version="true"></script>
    </environment>

    <script>
        var isAuthenticated = false;
    
        @if(User.Identity.IsAuthenticated) 
        {
            @: isAuthenticated = true;
        }
    
        initPhotoWall();
        loadImages(deltaImgsToLoad);
    </script>
}
